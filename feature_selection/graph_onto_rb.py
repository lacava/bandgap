""" @author: Sam Parry u1008557 """

import numpy as np
import matplotlib.pyplot as plt
from feature_selection import get_training_data
from normalize_data import denormalize_y

x_data, y_data = get_training_data('data.xlsx')
X_0, X_1, X_2, X_3, X_4 = x_data.T

X_5 = 2.2756191691692638 + (-0.3272193764716462 + (-2.361493765317003)*(X_2 - ((X_0)*(X_4))))*(2.4443625610734605 + X_1 + (-2.361493765317003)*(X_2 - ((X_0)*(X_4))) + (-2.361493765317003)*((X_2 - ((X_0)*(X_4)))*(1.4784424822276252 + X_1 + (-2.361493765317003)*(X_2 - ((X_0)*(X_4))))))
X_6 = (-29.729651732944237)*(X_2) + (-0.3788452291051517 + X_2)*(1.9383853159362463 + (-0.99555070696189)*(X_5)) + (-34.09063015563838)*((X_2)*(-1.232189315951906 + X_2 - ((-0.3788452291051517 + X_2)*(1.9383853159362463 + (-0.99555070696189)*(X_5))))) - (-1.232189315951906)
X_7 = 3.5749017852557587 + (-3.502486540310885 + (0.01317317282656471)*(((X_1 - (X_0))*(X_1 - (X_0)))*((X_2)**(-1))) + (2.9592636102270617)*((X_6)**(-1)))*(-3.502486540310885 + (0.01317317282656471)*(((X_1 - (X_0))*(X_1 - (X_0)))*((X_2)**(-1))) + (2.9592636102270617)*((X_6)**(-1))) + (-2.870882944924241)*(X_6)
y1 = denormalize_y(X_7)

X_5 = 1.0152511293209976 + (-0.16523851389149383)*(X_1) + (1.2157974820591653)*(((0.7263076646858402 + (2)*(X_0) - (X_1))*(0.7263076646858402 + (2)*(X_0) - (X_1)))*(0.33787306211259266 - (X_2)))
X_6 = X_5 + (2.3544846492408156)*((0.2522735610185984 + X_2 + (-3.0841194107703234)*(X_2))*((X_1)*((X_5)*((-3.0841194107703234)*(X_2) + X_5)) - ((X_1)*((X_2)*((-3.0841194107703234)*(X_2) + X_5)))))
X_7 = 2.1942157120167973 - (((X_3)**(-1))*(((X_6 + (X_3)*(X_6))*(X_6 + (X_3)*(X_6)))*(0.10026143378899283 + (X_3)*((2.2544047973418815 + (-1.1048740821873495)*(X_6))*(1.4230083683000225 + (-1.1048740821873495)*(X_6))))))
y2 = denormalize_y(X_7)

x = np.arange(len(y_data))
plt.plot(x, y_data, label='True Value', color='r')
plt.plot(x, y1, label='Best Individual (MSE)')
plt.plot(x, y2, label='Best Individual (RMSE)')
plt.xlabel('FEA Nodes')
plt.ylabel('Bandgap Size')
plt.legend(loc='upper right')

plt.show()
plt.close()
