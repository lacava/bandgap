""" @author: Sam Parry u1008557 """

import numpy as np
import matplotlib.pyplot as plt
from feature_selection import get_training_data
from normalize_data import denormalize_y

x_data, y_data = get_training_data('data.xlsx')
X_0, X_1, X_2, X_3, X_4 = x_data.T

X_5 = -0.01172622096386635 + (((0.03196437234047567)*(((X_3)**(-1))*((-0.6518046192854138 + (-0.00015447173298843318)*((X_2)**(-1)) + X_3)**(-1))) - (X_1))**(-1))*(-0.010812011522255919 + (0.03196437234047567)*(((X_3)**(-1))*((-0.6518046192854138 + (-0.00015447173298843318)*((X_2)**(-1)) + X_3)**(-1))) - (X_1))
X_6 = (61.201416902671745)*(0.019377605042339 + (((X_5)*(X_5))*((X_5)*(X_5)))*((3.7246904174951387 - ((X_5)*(X_5)))*((-1195.5443409861255 + (X_5)*((X_5)*(X_5)) + (-2)*(((X_5)*((X_5)*(X_5)))*((X_5)*((X_5)*(X_5)))) - ((X_5)*(X_5)))**(-1))))
X_7 = X_6 + (0.15067417116606457)*((-0.2853547290950528 + X_3)*((-1.3434228299955842 + X_6)*(33.17405902576111 + (1 - (X_6))**(-1) - (X_6))))
y1 = denormalize_y(X_7)

# X_5 = 1.0152511293209976 + (-0.16523851389149383)*(X_1) + (1.2157974820591653)*(((0.7263076646858402 + (2)*(X_0) - (X_1))*(0.7263076646858402 + (2)*(X_0) - (X_1)))*(0.33787306211259266 - (X_2)))
# X_6 = X_5 + (2.3544846492408156)*((0.2522735610185984 + X_2 + (-3.0841194107703234)*(X_2))*((X_1)*((X_5)*((-3.0841194107703234)*(X_2) + X_5)) - ((X_1)*((X_2)*((-3.0841194107703234)*(X_2) + X_5)))))
# X_7 = 2.1942157120167973 - (((X_3)**(-1))*(((X_6 + (X_3)*(X_6))*(X_6 + (X_3)*(X_6)))*(0.10026143378899283 + (X_3)*((2.2544047973418815 + (-1.1048740821873495)*(X_6))*(1.4230083683000225 + (-1.1048740821873495)*(X_6))))))
# y2 = denormalize_y(X_7)

x = np.arange(len(y_data))
fig = plt.figure(figsize=(12,5))
plt.plot(x, y_data, label='True Value', color='r')
plt.plot(x, y1, label='Best Individual (MSE)')
# plt.plot(x, y2, label='Best Individual (RMSE)')
plt.xlabel('FEA Nodes')
plt.ylabel('Bandgap Size')
plt.legend(loc='upper right')

plt.show()
plt.close()
